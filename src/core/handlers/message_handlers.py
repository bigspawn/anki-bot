"""
Message handlers for the German Learning Bot
"""

import logging

from telegram import Update
from telegram.ext import ContextTypes

logger = logging.getLogger(__name__)


class MessageHandlers:
    """Handles text messages and callback queries"""

    def __init__(
        self,
        safe_reply_callback,
        process_text_callback,
        handle_study_callback,
    ):
        self._safe_reply = safe_reply_callback
        self._process_text_for_user = process_text_callback
        self._handle_study_callback = handle_study_callback

    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """Handle text messages (auto-add words)"""
        if not update.message or not update.effective_user:
            return

        text = update.message.text

        if not text or len(text.strip()) < 10:
            await self._safe_reply(
                update,
                "üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –Ω–µ–º–µ—Ü–∫–∏–π —Ç–µ–∫—Å—Ç, –∏ —è –∏–∑–≤–ª–µ–∫—É –∏–∑ –Ω–µ–≥–æ —Å–ª–æ–≤–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è!\n\n"
                "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                "/add <—Ç–µ–∫—Å—Ç> - –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–∞\n"
                "/study - –ù–∞—á–∞—Ç—å –∏–∑—É—á–µ–Ω–∏–µ\n"
                "/help - –°–ø—Ä–∞–≤–∫–∞"
            )
            return

        await self._process_text_for_user(update, text)

    async def handle_callback_query(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """Handle callback queries from inline keyboards"""
        if not update.callback_query or not update.effective_user:
            return

        query = update.callback_query
        await query.answer()

        # Handle study session callbacks (JSON format)
        if query.data and query.data.startswith("{"):
            await self._handle_study_callback(query)
            return

        # Handle other callbacks as needed
        logger.warning(f"Unhandled callback query: {query.data}")
